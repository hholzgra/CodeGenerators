<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE udf SYSTEM "udf_extension.dtd">
<udf name="client">
  <summary>Recursive querie using the client API internally</summary>

  <description>
This UDF is doing something absolutely not supported: 
it uses the MySQL client API to issue yet another query
from within the user defined function

Why isn't this supported?

- it creates a real client connection, so the server is talking
  to itself over TCP -> not very effective

- it opens a can of worms when it comes to resource locking

- the UDF interface was simply not designed and implemented
  with this kind of tricks in mind

If you really need to do stuff like this you should look into
stored procedures and functions instead.
  </description>

  <maintainer>
    <name>Hartmut Holzgraefe</name>
    <email>hartmut@php.net</email>
  </maintainer>

  <license>LGPL</license>

  <deps>
  </deps>

  <function name="recurse" returns="int">
    <init>
<![CDATA[
MYSQL *pconn;

pconn = mysql_init(NULL);
initid->ptr = (char *)pconn;

if (!pconn) {
  message = "can't init";
  free(initid->ptr);
  initid->ptr = NULL;
  return 1;
}

pconn = mysql_real_connect(pconn, "localhost", "root", "", "test", 0, NULL, 0);

if (!pconn) {
  message = "can't connect";
  free(initid->ptr);
  initid->ptr = NULL;
  return 1;
}

return 0;
]]>
    </init>
    <deinit>
<![CDATA[
if (initid->ptr) {
  mysql_close((MYSQL *)(initid->ptr));
}
]]>
    </deinit>
    <code>
<![CDATA[
MYSQL *pconn = (MYSQL *)initid->ptr;

if (0 == mysql_query(pcon, "SELECT COUNT(*)  AS anzahl FROM test")) {
  MYSQL_RES *res;
  MYSQL_ROW  row;
  unsigned int numfields;
  
  res = mysql_store_result(pconn);
}
]]>
    </code>
  </function>

</udf>
