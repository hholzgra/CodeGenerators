<?xml version="1.0" ?>
<!DOCTYPE extension SYSTEM "../extension.dtd">
<extension name="interface" version="1.0.0">

 <class name="c1">
  <implements interface="Countable"/>
  <function name="count">
   <proto>int count()</proto>
   <code>RETURN_LONG(42);</code>
  </function>
 </class>

 <class name="c2">
  <implements interface="Countable"/>
 </class>

 <class name="c3">
  <implements interface="Countable"/>
  <implements interface="Iterator"/>
 </class>

  

 <test name="001">
  <code>
   $c = new c1; 
   echo $c instanceof Countable ? "OK" : "Failure";
  </code>
 </test>

 <test name="002">
  <code>
   $c = new c2; 
   echo "OK";
  </code>
  <result mode="format">
Fatal error: Cannot instantiate abstract class c2 in %s on line %d
  </result>
 </test>

 <test name="003">
  <code>
   class class3 extends c2 
   {
     function count() { return 42; }
   }
   $c = new class3;
   echo "OK";
  </code>
 </test>

 <test name="004">
  <code>
   <?data
$class = new ReflectionClass('c3');
var_dump($class->getInterfaces());
   ?>
  </code>
  <result mode="format">
   <?data
  array(3) {
  [%s]=>
  &object(ReflectionClass)#2 (1) {
    ["name"]=>
    string(9) "Countable"
  }
  [%s]=>
  &object(ReflectionClass)#3 (1) {
    ["name"]=>
    string(8) "Iterator"
  }
  [%s]=>
  &object(ReflectionClass)#4 (1) {
    ["name"]=>
    string(11) "Traversable"
  }
}
   ?>
  </result>
 </test>

</extension>
