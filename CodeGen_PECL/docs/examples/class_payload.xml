<?xml version="1.0"?>
<!DOCTYPE extension SYSTEM "../extension.dtd">
<extension name="class_payload" version="1.0.0">

 <class name="p">
  <payload type="FILE" alloc="no"/>

  <init>
    payload->data = NULL;
  </init>

  <destruct>
	 if (payload->data) fclose(payload->data);
  </destruct>


  <function name="open">
   <proto>bool open(string name, string mode)</proto>
   <code>
    payload->data = fopen(name, mode);
    RETURN_BOOL(payload->data != NULL);
   </code>
  </function>

  <function name="read">
   <proto>string read(void)</proto>
   <code>
char buf[256];
if (NULL != fgets(buf, sizeof(buf)-1, payload->data)) {
  RETURN_STRING(buf, 1);
} 
RETURN_FALSE;
   </code>
  </function>

  <function name="write">
   <proto>bool write(string buf)</proto>
   <code>
int len = fputs(buf, payload->data);
if (len &gt; 0) {
  RETURN_TRUE;
} 
RETURN_FALSE;
   </code>
  </function>

  <function name="close">
   <proto>bool close(void)</proto>
   <code>
     if (payload->data) {
	   fclose(payload->data);
	   payload->data = NULL;
	   RETURN_TRUE;
	 }
	 RETURN_FALSE;
   </code>
  </function>

 </class>

 <test>
  <code>
<?data
$p = new p;

$p->open("test.txt", "w") or die("cannot open file");
$p->write("OK");
$p->close();

$p->open("test.txt", "r") or die("cannot open file");
echo $p->read();
$p->close();
?>
  </code>
 </test>

</extension>
